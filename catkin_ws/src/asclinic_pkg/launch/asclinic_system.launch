<launch>

	<!-- START A GROUP WITH A NAMESPACE -->
	<group ns="asc">

		<!-- LAUNCH A "I2C for Motors" NODE -->
		<node
			pkg    = "asclinic_pkg"
			name = "i2c_for_motors"
			output = "screen"
			type   = "i2c_for_motors"
			>
			<param name = "motor_driver_verbosity" value = "1" />
			<param name = "motor_driver_current_limit_in_milliamps" value = "5000" />
			<param name = "motor_driver_max_duty_cycle_limit_in_percent" value = "100.0" />
			<param name = "motor_driver_max_accel_limit_in_percent_per_millisecond" value = "0.04" />
			<param name = "motor_driver_max_decel_limit_in_percent_per_millisecond" value = "0.16" />
			<param name = "motor_driver_left_side_multiplier" value = "1" />
			<param name = "motor_driver_right_side_multiplier" value = "1" />
		</node>

		<!-- LAUNCH A "I2C for Servos" NODE -->
		<node
			pkg    = "asclinic_pkg"
			name = "i2c_for_servos"
			output = "screen"
			type   = "i2c_for_servos"
			>
			<param name = "servo_driver_verbosity" value = "1" />
			<param name = "servo_driver_pwm_frequency_in_hertz" value = "50" />
			<param name = "servo_driver_min_pulse_width_in_microseconds" value = "500" />
			<param name = "servo_driver_max_pulse_width_in_microseconds" value = "2500" />
		</node>

		<!-- LAUNCH A "Encoder Read Multi Threaded" NODE -->
		<node
			pkg    = "asclinic_pkg"
			name = "encoder_read_multi_threaded"
			output = "screen"
			type   = "encoder_read_multi_threaded"
			>
			<param name = "encoder_read_verbosity" value = "1" />
			<param name = "gpio_chip_number_for_encoder_lines" value = "1" />
			<param name = "should_monitor_left_side_encoder_channel_a" value = "true" />
			<param name = "should_monitor_left_side_encoder_channel_b" value = "false" />
			<param name = "should_monitor_right_side_encoder_channel_a" value = "true" />
			<param name = "should_monitor_right_side_encoder_channel_b" value = "false" />
			<param name = "line_number_for_left_side_encoder_channel_a" value = "105" />
			<param name = "line_number_for_left_side_encoder_channel_b" value = "106" />
			<param name = "line_number_for_right_side_encoder_channel_a" value = "84" />
			<param name = "line_number_for_right_side_encoder_channel_b" value = "130" />
			<!-- NOTE: options for event monitoring are: "rising", "falling", "both" -->
			<param name = "encoder_events_to_monitor" value = "rising" />
			<param name = "delta_t_for_publishing_encoder_counts" value = "0.1" />
		</node>

		<!-- LAUNCH A "Aruco Detector" NODE -->
		<node
			pkg    = "asclinic_pkg"
			name = "aruco_detector"
			output = "screen"
			type   = "aruco_detector.py"
			>
			<param name = "aruco_detector_verbosity" value = "1" />
			<param name = "aruco_detector_usb_camera_device_number" value = "0" />
			<param name = "aruco_detector_desired_camera_frame_height" value = "1080" />
			<param name = "aruco_detector_desired_camera_frame_width" value = "1920" />
			<param name = "aruco_detector_desired_camera_fps" value = "5" />
			<param name = "aruco_detector_marker_size" value = "0.250" />
			<param name = "aruco_detector_save_image_path" value = "/home/asc/saved_camera_images/" />
			<param name = "aruco_detector_should_save_all_aruco_images" value = "False" />
			<param name = "aruco_detector_should_publish_camera_images" value = "True" />
			<param name = "aruco_detector_should_show_camera_images" value = "False" />
		</node>

		<!-- LAUNCH A "Control Policy Skeleton" PYTHON NODE -->
		<node
			pkg    = "asclinic_pkg"
			name = "control_policy_skeleton"
			output = "screen"
			type   = "control_policy_skeleton.py"
			>
			<param name = "control_policy_verbosity" value = "1" />
			<param name = "robot_wheel_base" value = "0.22" />
			<param name = "robot_wheel_radius" value = "0.072" />
			<param name = "encoder_counts_per_wheel_revolution" value = "1680" />
		</node>

	</group>

	<!-- LAUNCH A RPLIDAR NODE -->
	<!-- Note: for model A1/A2 use baudrate 115200 -->
	<!--       for model A3    use baudrate 256000 -->
	<node
		pkg    = "rplidar_ros"
		name = "rplidarNode"
		output = "screen"
		type   = "rplidarNode"
		>
		<param name="serial_port" type="string" value="/dev/rplidar"/>
		<param name="serial_baudrate" type="int" value="115200"/>
		<param name="frame_id" type="string" value="laser"/>
		<param name="inverted" type="bool" value="false"/>
		<param name="angle_compensate" type="bool" value="true"/>
	</node>

</launch>
